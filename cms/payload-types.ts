/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    posts: Post;
    projects: Project;
    technologies: Technology;
    users: User;
    media: Media;
  };
  globals: {};
}
export interface Post {
  id: string;
  title: string;
  content: {
    [k: string]: unknown;
  }[];
  coverImage: string | Media;
  project?: string | Project;
  technologies?: string[] | Technology[];
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes?: {
    thumbnail?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    medium?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    large?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    hero?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    portrait?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
}
export interface Project {
  id: string;
  title: string;
  slug: string;
  projectLinks?: {
    url: string;
    linkText: string;
    id?: string;
  }[];
  description: {
    [k: string]: unknown;
  }[];
  coverImage?: string | Media;
  heading: string;
  features?: {
    feature?: string;
    image: string | Media;
    details?: string;
    id?: string;
  }[];
  content?: {
    [k: string]: unknown;
  }[];
  technologies?: string[] | Technology[];
  updatedAt: string;
  createdAt: string;
}
export interface Technology {
  id: string;
  name: string;
  logo?: string | Media;
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: string;
  avatar?: string | Media;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
